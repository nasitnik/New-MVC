@using TaxiApp.Common;
@using TaxiAppAdmin.Pages;
@using TaxiAppAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "Manage Promo Code";
}

<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        border-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            border-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        border-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .hideDelete {
        display: none !important;
    }
</style>

<div class="block-header">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h2><a id="headingtext" href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a>Manage Promo Code</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action(Actions.Index,Controllers.Home,new { Area=""})"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item active">Manage Promo Code</li>
            </ul>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="header">
            </div>
            <div class="body">
                <div class="portlet-body table-responsive" id="divUsersTable">
                    <table class="table table-striped table-bordered table-hover" id="UsersTable"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fadeIn" id="AddNewPromoCodePopup" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">
                    Add a New Promo Code
                </h6>
            </div>
            <form method="post" id="frmProductype">
                <div class="modal-body">
                    <div class="row clearfix">
                        <input type="hidden" id="promocodeId" name="promocodeId" />
                        <div class="col-sm-12">
                            <label>Name</label>
                            <div class="form-group">
                                <input type="text" id="name" name="name" class="form-control" />
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <label>DisCount</label>
                            <div class="form-group">
                                <input type="number" id="discount" name="discount" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input id="addNewproducttypebtn" type="submit" class="btn btn-primary saveBtn" value="Save" />
                    <button class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        Saving...
                    </button>
                    <button type="button" class="btn btn-secondary closeBtn" onclick="closeModal();">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section dashboardscripts{
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/datatable.js"></script>
    <script src="~/Scripts/datatables.min.js"></script>
    <script src="~/Scripts/datatables.bootstrap.js"></script>
}

@section Scripts {
    <script>

        $(document).ready(() => {
            UsersDataTable.init();
            FormClientValidation.init();
        });
             var UsersDataTable = function () {

                let initTable1 = function () {
                    let table = $('#UsersTable');

                    let oTable = table.dataTable({
                        "stateSave": true,
                        "autoWidth": false,
                        "paging": true,
                        // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                        "language": {
                            "aria": {
                                "sortAscending": ": activate to sort column ascending",
                                "sortDescending": ": activate to sort column descending"
                            },
                            "emptyTable": "No data available in table",
                            "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                            "infoEmpty": "No entries found",
                            "infoFiltered": "(filtered1 from _MAX_ total entries)",
                            "lengthMenu": "_MENU_ entries",
                            "search": "Search:",
                            "zeroRecords": "No matching records found"
                        },
                        "pageLength": 10,
                        "processing": true,
                        "serverSide": true,
                        "ajax": {
                            async: true,
                            url: '@Url.Action(Actions.ViewAllData, Controllers.PromoCode)',
                            type: "post",
                            data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Name", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["Name"] == "" || row["Name"] == null ? '-' : row["Name"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Discount", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["Discount"] == "" || row["Discount"] == null ? '-' : row["Discount"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Created Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["CreatedDateStr"] == "" || row["CreatedDateStr"] == null ? '-' : row["CreatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Update Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["UpdatedDateStr"] == "" || row["UpdatedDateStr"] == null ? '-' : row["UpdatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Action", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<button class="btn btn-sm btn-outline-secondary mr-1" onclick="EditPromoCode('${(row["Id"])}');"><i class="fa fa-edit"></i></button>`;
                                htmlData += `<button class="btn btn-sm btn-outline-secondary mr-1" onclick="ConfirmMessagePromoCodeDelete('${(row["Id"])}');"><i class="fa fa-trash-o" aria-hidden="true"></i></button>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/
                        "buttons": [
                            {
                                text: ' <b>+Add PromoCode</b> ',
                                className: 'them-btn',
                                action: function (e, dt, node, config) {
                                    OpenAddNewPromocodePopup();
                                }
                            },
                        ],

                        // setup responsive extension: http://datatables.net/extensions/responsive/
                        responsive: true,

                        "lengthMenu": [
                            [5, 10, 15, 20, 1000],
                            [5, 10, 15, 20, 1000] // change per page values here
                        ],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                        // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                        // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                        // So when dropdowns used the scrollable div should be removed.
                        //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                    });
                }

                return {
                    //main function to initiate the module
                    init: function () {
                        if ($.fn.DataTable.isDataTable("#UsersTable")) {
                            $('#UsersTable').dataTable().fnDestroy();
                            $('#divUsersTable').html('<table class="table table-striped" width="100%" id="UsersTable"></table>');
                        }
                        initTable1();
                    }
                };
        }();

        var FormClientValidation = function () {

            // basic validation
            var handleValidation = function () {

                var form1 = $('#frmProductype');
                var error1 = $('.alert-danger', form1);

                form1.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",  // validate all fields including form hidden input
                    rules: {
                        productcategory: {
                            required: true,
                        },
                        ProductTypeId: {
                            required: true,
                        },
                    },

                    messages: {
                        productcategory: {
                            required: "Product Category is required",
                        },
                        ProductTypeId: {
                            required: "Product Type is required",
                        },
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit
                        //success1.hide();
                        error1.show();
                        App.scrollTo(error1, -200);
                    },

                    errorPlacement: function (error, element) { // render error placement for each input type
                        var cont = $(element).parent('.input-group');
                        if (cont.size() > 0) {
                            cont.after(error);
                        } else {
                            element.after(error);
                        }
                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element)
                            .closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element)
                            .closest('.form-group').removeClass('has-error'); // set error class to the control group
                    },

                    success: function (label) {
                        label
                            .closest('.form-group').removeClass('has-error'); // set success class to the control group
                    },

                    submitHandler: function (form) {
                        AddPromoCode();
                    }
                });
            }
            return {
                //main function to initiate the module
                init: function () {
                    handleValidation();
                }
            };
        }();


        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }
         function ConfirmMessagePromoCodeDelete(Id) {
            swal({
                title: "Are you sure ?",
                text: "You will be deleting this PromoCode !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#dc3545",
                confirmButtonText: "Yes, do it !",
                closeOnConfirm: false
            }, function () {
                PromoCodeDelete(Id);
            });
        }

        function PromoCodeDelete(Id) {
            $.ajax({
                type: 'POST',
                url: "@Url.Action(Actions.DeletePromoCode, Controllers.PromoCode)",
                async: false,
                data: ({ Id: Id }),
                dataType: 'json',
                success: function (response) {
                    debugger;
                    swal("Great!", response, "success");
                    UsersDataTable.init();
                },
                error: function (response) {
                    swal("Opps!", "An error occured ! Please try again.", "error");
                }
            });
        }
        //Add new product Category function
        function OpenAddNewPromocodePopup() {
            $('#name').val('')
            $('#discount').val(0)
            $('#AddNewPromoCodePopup').modal('show');
        }

        function AddPromoCode() {

            $("#AddNewPromoCodePopup").hide();
            $(".loading").show();
            $(".closeBtn").hide();

            var formData = new FormData();
            formData.append("Id", $("#promocodeId").val());
            formData.append("Name", $("#name").val());
            formData.append("Discount", $("#discount").val());
            debugger;
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.PromoCodeUpsert, Controllers.PromoCode)',
                async: false,
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.Code == 200) {
                        $('#AddNewPromoCodePopup').modal('hide');
                        swal("Great!", response.Message, "success");
                        $('#name').val('')
                        $('#discount').val(0)
                        ProductCategoryDataTable.init();
                    }
                    else {
                        swal("Error !", response.Message, "error");
                        setTimeout(function () {
                        }, 2000);
                    }

                    $(".loading").hide();
                    $("#addNewproducttypebtn").show();
                    $(".closeBtn").show();

                    //blank value for input
                    $('#name').val('')
                    $('#discount').val(0)
                },
                error: function (error) {
                    swal("Error!", error.Message, "error");
                    $(".loading").hide();
                    $("#addNewproducttypebtn").show();
                    $(".closeBtn").show();
                }
            });
         }

        function closeModal() {
            $('#name').val('')
            $('#discount').val(0)
            $('#AddNewPromoCodePopup').modal('hide');
        }

        //Edit ProductCategory data fuction
        function EditPromoCode(promocodeId) {
            $('#AddNewPromoCodePopup').modal('show');
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.GetPromoCodeById, Controllers.PromoCode)',
                data: { Id: promocodeId},
                dataType: 'json',
                success: function (response) {
                    $('#promocodeId').val(response.Item.Id)
                    $('#name').val(response.Item.Name)
                    $('#discount').val(response.Item.Discount)

                },
                error: function (error) {

                }
            });
        }
    </script>
    <script src="~/assets/validation/js/jquery-ui.min.js"></script>
    <script src="~/assets/validation/js/app.min.js"></script>
    <script src="~/assets/validation/js/ui-modals.min.js"></script>
    <script src="~/assets/validation/js/jquery.validate.min.js"></script>
    <script src="~/assets/validation/js/additional-methods.min.js"></script>
    <script src="~/assets/validation/js/toastr.min.js"></script>
    <script src="~/assets/validation/js/ui-toastr.min.js"></script>
    <script src="~/assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/assets/vendor/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <script src="~/assets/js/pages/forms/dropify.js"></script>
    <script src="~/assets/js/pages/ui/dialogs.js"></script>
}