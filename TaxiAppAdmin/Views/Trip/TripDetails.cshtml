@using TaxiApp.Common;
@using TaxiAppAdmin.Pages;
@using TaxiAppAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "Manage Trips";
}


<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        border-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            border-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        border-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .hideDelete {
        display: none !important;
    }
</style>

<div class="block-header">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a>Manage Salons</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action(Actions.Index,Controllers.Home,new { Area=""})"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item active"><a href="@Url.Action(Actions.Index,Controllers.Home,new { Area=""})">Manage Salon Owners</a></li>
                <li class="breadcrumb-item active">Manage Salons</li>
            </ul>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="header">
            </div>
            <div class="body">
                <div class="portlet-body table-responsive" id="divUsersTable">
                    <table class="table table-striped table-bordered table-hover" id="UsersTable"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fadeIn" id="SalonsFilterPopup" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">Salons Filters</h6>
            </div>
            <div class="modal-body">
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <label>Status</label>
                        <div class="form-group">
                            <select class="form-control" id="SearchSalonStatus" name="SearchSalonStatus">
                                <option value="">Select Status</option>
                                <option value="3">Approved</option>
                                <option value="4">Rejected</option>
                                <option value="5">Approval Pending</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="SearchReset(false);">Search</button>
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Close</button>
            </div>
        </div>
    </div>
</div>

@*Salon change status*@
<div class="modal fadeIn" id="salonsChangestatus" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">
                    Update Status
                </h6>
            </div>
            <div class="modal-body">
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <label>Status</label>
                        <div class="form-group">
                            <select class="form-control" id="changeSalonstatus" name="changeSalonstatus">
                                <option value="">Select Status</option>
                                <option value="1">Approval Pending</option>
                                <option value="2">Rejected</option>
                                <option value="3">Approved</option>
                                <option value="4">Confirmed</option>
                                <option value="5">Completed</option>


                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="updateSalonstatus();">Update</button>
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Close</button>
            </div>
        </div>
    </div>
</div>

@section dashboardscripts{
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/datatable.js"></script>
    <script src="~/Scripts/datatables.min.js"></script>
    <script src="~/Scripts/datatables.bootstrap.js"></script>
}

@section Scripts {
    <script>

        $(document).ready(() => {
            UsersDataTable.init();
        });
             var UsersDataTable = function () {

                let initTable1 = function () {
                    let table = $('#UsersTable');

                    let oTable = table.dataTable({
                        "stateSave": true,
                        "autoWidth": false,
                        "paging": true,
                        // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                        "language": {
                            "aria": {
                                "sortAscending": ": activate to sort column ascending",
                                "sortDescending": ": activate to sort column descending"
                            },
                            "emptyTable": "No data available in table",
                            "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                            "infoEmpty": "No entries found",
                            "infoFiltered": "(filtered1 from _MAX_ total entries)",
                            "lengthMenu": "_MENU_ entries",
                            "search": "Search:",
                            "zeroRecords": "No matching records found"
                        },
                        "pageLength": 10,
                        "processing": true,
                        "serverSide": true,
                        "ajax": {
                            async: true,
                            url: '@Url.Action(Actions.ViewAllDataTrips, Controllers.Customer)',
                            type: "post",
                            data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Trip Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0 text-truncate" title="${row["TripDate"]}"><b>TripDate: </b>${row["TripDate"]}</p>`;
                                htmlData += `<p class="mb-0 text-truncate" title="${row["TripTime"]}"><b>TripTime: </b>${row["TripTime"]}</p>`;
                                htmlData += `<p class="mb-0 text-truncate " title="${row["AddressLine1"]}"><b>Address Line1 : </b>
                                    <a target="_balnk" class="c-text-primary" href="https://www.google.com/maps/?q=${row["PickUpLat"]},${row["PickUpLong"]}">${row["PickUpAddress"] == "" || row["PickUpAddress"] == null ? '-' : row["PickUpAddress"]}</a>
                                </p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Country : </b>${row["LookUpCountry"] == "" || row["LookUpCountry"] == null ? '-' : row["LookUpCountry"]}</p>`;
                                htmlData += `<p class="mb-0"><b>State : </b>${row["LookUpState"] == "" || row["LookUpState"] == null ? '-' : row["LookUpState"]}</p>`;
                                htmlData += `<p class="mb-0"><b>City : </b>${row["City"] == "" || row["City"] == null ? '-' : row["City"]}</p>`;
                                htmlData += `<p class="mb-0"><b>ZipCode : </b>${row["ZipCode"] == "" || row["ZipCode"] == null ? '-' : row["ZipCode"]}</p>`;
                                htmlData += `<p class="mb-0 text-truncate " title="${row["AddressLine1"]}"><b>Address Line1 : </b>
                                    <a target="_balnk" class="c-text-primary" href="https://www.google.com/maps/?q=${row["Latitude"]},${row["Longitude"]}">${row["AddressLine1"] == "" || row["AddressLine1"] == null ? '-' : row["AddressLine1"]}</a>
                                </p>`;
                                htmlData += `<p class="mb-0 text-truncate " title="${row["AddressLine2"]}"><b>Address Line2 : </b>${row["AddressLine2"] == "" || row["AddressLine2"] == null ? '-' : row["AddressLine2"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Created Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["CreatedDateStr"] == "" || row["CreatedDateStr"] == null ? '-' : row["CreatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Update Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["UpdatedDateStr"] == "" || row["UpdatedDateStr"] == null ? '-' : row["UpdatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Status", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["TripStatusId"] == 1) {
                                    htmlData = `<button class="badge badge-success">Approval Pending</button>`;
                                } else if (row["TripStatusId"] == 2) {
                                    htmlData = `<button class="badge badge-danger">Rejected</button>`;
                                } else if (row["TripStatusId"] == 3) {
                                    htmlData = `<button class="badge badge-primary">Approved</button>`;
                                } else if (row["TripStatusId"] == 4) {
                                    htmlData = `<button class="badge badge-primary">Confirmed</button>`;
                                } else if (row["TripStatusId"] == 5) {
                                    htmlData = `<button class="badge badge-primary">Completed</button>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Assigned To", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["AssignedName"] == "" || row["AssignedName"] == null ? '-' : row["AssignedName"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Status", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["TripStatusId"] == 1) {
                                    htmlData = `<button class="badge badge-success">Approval Pending</button>`;
                                } else if (row["TripStatusId"] == 2) {
                                    htmlData = `<button class="badge badge-danger">Rejected</button>`;
                                } else if (row["TripStatusId"] == 3) {
                                    htmlData = `<button class="badge badge-primary">Approved</button>`;
                                } else if (row["TripStatusId"] == 4) {
                                    htmlData = `<button class="badge badge-primary">Confirmed</button>`;
                                } else if (row["TripStatusId"] == 5) {
                                    htmlData = `<button class="badge badge-primary">Completed</button>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Action", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["TripStatusId"] == 2) {
                                    htmlData += `-`;
                                }
                                else {
                                    htmlData += `<button class="btn btn-primary mr-1" onclick="changeStatus(${(row["Id"])});">Change Status</button>`;
                                }

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Assigned Driver:", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["AssignedId"] > 0) {
                                    htmlData += `-`;
                                }
                                else {
                                    htmlData += `<button class="btn btn-primary mr-1" onclick="assignedDriver(${(row["Id"])});">Assigned Driver</button>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/
                        "buttons": [
                            {
                                text: 'Filters',
                                className: 'addData them-btn',
                                action: function (e, dt, node, config) {
                                    OpenSalonsFiltersPopup();
                                }
                            },
                            {
                                text: 'Reset',
                                className: 'them-reset-btn',
                                action: function () {
                                    SearchReset(true)
                                }
                            }
                            //{ extend: 'excel', className: 'them-btn' }
                        ],

                        // setup responsive extension: http://datatables.net/extensions/responsive/
                        responsive: true,

                        "lengthMenu": [
                            [5, 10, 15, 20, 1000],
                            [5, 10, 15, 20, 1000] // change per page values here
                        ],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                        // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                        // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                        // So when dropdowns used the scrollable div should be removed.
                        //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                    });
                }

                return {
                    //main function to initiate the module
                    init: function () {
                        if ($.fn.DataTable.isDataTable("#UsersTable")) {
                            $('#UsersTable').dataTable().fnDestroy();
                            $('#divUsersTable').html('<table class="table table-striped" width="100%" id="UsersTable"></table>');
                        }
                        initTable1();
                    }
                };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                debugger;
                var param = {};
                param["CustomerId"] = @ViewBag.CustomerId;
                param["LookUpStatusId"] = $("#SearchSalonStatus").val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

        //Fillter modal open function
        const OpenSalonsFiltersPopup = () => {
            $("#SalonsFilterPopup").modal("show");
        }

        //Fillter date reset function
        const SearchReset = (isReset = false) => {
            if (isReset == true) {
                $("#SearchSalonStatus").val("");
            }
            UsersDataTable.init();
            $("#SalonsFilterPopup").modal("hide");
        }


        //ChangeStatus modal open function
        //changeSalonstatus
        var SalonId = "";
        const changeStatus = (salonId) => {
            SalonId = btoa(salonId);
            $('#salonsChangestatus').modal('show');
        }

        //changeSalonstatus function
        function updateSalonstatus() {
            $('#salonsChangestatus').modal('hide');
            var SalonstatusId = $('#changeSalonstatus').val();
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.ChangeStatusTrip, Controllers.Customer)',
                data: { TripId: SalonId, statusId: $('#changeSalonstatus').val() },
                dataType: 'json',
                success: function (response) {
                    UsersDataTable.init();
                    debugger;
                           if (TripStatusId == 1) {
                               swal("Approval Pending !", "The Status has been Approval Pending.", "success");
                           } else if (TripStatusId == 2) {
                               swal("Rejected !", "The Status has been Rejected.", "success");
                           } else if (TripStatusId == 3) {
                               swal("Approved !", "The Status has been Approved.", "success");
                           } else if (TripStatusId == 4) {
                               swal("Approval Pending !", "The Status has been Approval Pending.", "success");
                           } else if (TripStatusId == 5) {
                               swal("Confirmed !", "The Status has been Confirmed.", "success");
                    }
                },
                error: function (error) {
                    if (SalonstatusId == 3) {
                        swal("Error !", "An error occured while Approved the Salon.", "error");
                    } else if (SalonstatusId == 4) {
                        swal("Error !", "An error occured while Rejected the Salon.", "error");
                    } else if (SalonstatusId == 5) {
                        swal("Error !", "An error occured while Approval Pending the Salon.", "error");
                    }
                }
            });
        }


    </script>
    <script src="~/assets/validation/js/jquery-ui.min.js"></script>
    <script src="~/assets/validation/js/app.min.js"></script>
    <script src="~/assets/validation/js/ui-modals.min.js"></script>
    <script src="~/assets/validation/js/jquery.validate.min.js"></script>
    <script src="~/assets/validation/js/additional-methods.min.js"></script>
    <script src="~/assets/validation/js/toastr.min.js"></script>
    <script src="~/assets/validation/js/ui-toastr.min.js"></script>
    <script src="~/assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/assets/vendor/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <script src="~/assets/js/pages/forms/dropify.js"></script>
    <script src="~/assets/js/pages/ui/dialogs.js"></script>
}